--[=======[
-------- -------- -------- --------
             sock操作
-------- -------- -------- --------
]=======]

--[=======[
●
    Private:  UDP;
        --UDP操作失败将抛出异常，同时!!释放对象!!

    UDP       udp_new         (
                              [
                              string|uint         ip    = "0.0.0.0",
                              string|uint         port  = "0"
                              ]
                              );                                      [-0|1|2, +1, c|v]
        --当ip == "0.0.0.0"且port != "0"时，绑定指定端口
        --当ip != "0.0.0.0"时，默认连接指定IP
        
    string ip, string port, uint ip, uint port
              UDP:getsockname ( );                                          [-0, +1, c]

    string ip, string port, uint ip, uint port
              UDP:getpeername ( );                                          [-0, +1, c]

    stirng    UDP:type        ( );     --返回"UDP"                          [-0, +1, c]
    
    void      UDP:close       ( );                                          [-0, +0, c]

    void      UDP:__gc        ( );                                          [-0, +0, c]

    string    UDP:__tostring  ( );                                          [-0, +1, c]
        --返回UDP{server/client}:########    local_ip:port >> link_ip:port
        
    UDP       UDP:settimeout  ( int timeout );                              [-1, +1, v]
        --收发延时，毫秒计

    UDP       UDP:broadcast   ( bool set );                                 [-1, +1, v]
        --广播设置

    UDP       UDP:send        (
                              string              data
                              [,
                              string|uint         ip    = "0.0.0.0",
                              string|uint         port  = "0"
                              ]
                              );                                      [-1|2|3, +1, c|v]
        --当不提供ip、port时，默认连接初始化时指定的IP
        
    string data, string ip, string port, uint ip, uint port
              UDP:recv        ( [ int size = 0x800 ] );               [-0|1, +2|5, c|v]
        --当不提供size时，默认提供0x800的接收缓冲区
        --超时返回nil, "timeout"
        --接收缓冲区不足返回nil, "msgsize"
]=======]